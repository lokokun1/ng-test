name: Deploy Terraform via Terragrunt

on:
  push:
    branches:
      - main

jobs:
  # ------------------------------------------------------------
  # 1. BOOTSTRAP BACKEND
  # ------------------------------------------------------------
  bootstrap-backend:
    name: Bootstrap Terraform backend (S3 + DynamoDB)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform and Terragrunt
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          # Terraform
          wget -q https://releases.hashicorp.com/terraform/1.9.6/terraform_1.9.6_linux_amd64.zip
          unzip terraform_1.9.6_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -v
          # Terragrunt
          wget -q https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt -v

      - name: Bootstrap remote state backend
        working-directory: terragrunt-demo/live/dev/backend
        env:
          TERRAGRUNT_DISABLE_REMOTE_STATE: true
        run: |
          echo "Bootstrapping Terraform backend..."
          terragrunt init
          terragrunt apply -auto-approve


  # ------------------------------------------------------------
  # 2. DEPLOY ENVIRONMENT
  # ------------------------------------------------------------
  deploy:
    name: Deploy environment via Terragrunt
    runs-on: ubuntu-latest
    needs: bootstrap-backend  # Ensures backend exists first

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Clean Terragrunt cache
        run: rm -rf .terragrunt-cache

      - name: Install Terraform and Terragrunt
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget -q https://releases.hashicorp.com/terraform/1.9.6/terraform_1.9.6_linux_amd64.zip
          unzip terraform_1.9.6_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -v
          wget -q https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt -v

      - name: Initialize Terragrunt (now backend exists)
        working-directory: terragrunt-demo/live/dev
        run: |
          echo "Initializing Terragrunt..."
          terragrunt run-all init -- -reconfigure

      - name: Deploy infrastructure
        working-directory: terragrunt-demo/live/dev
        run: |
          echo "Deploying environment via Terragrunt..."
          terragrunt run-all apply -- -auto-approve
